receivers:
  # System metrics receiver
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
        metrics:
          system.cpu.time:
            enabled: true
      memory:
        metrics:
          system.memory.usage:
            enabled: true
      disk:
        metrics:
          system.disk.io:
            enabled: true
      network:
        metrics:
          system.network.io:
            enabled: true
  prometheus:
    config:
      scrape_configs:
        # OpenTelemetry Collector self-metrics
        - job_name: 'otel-collector-monitoring'
          scrape_interval: 10s
          static_configs:
            - targets: ['otel-collector:8888']

        # InfluxDB metrics
        - job_name: 'influxdb-monitoring'
          scrape_interval: 30s
          static_configs:
            - targets: ['influxdb2:8086']

  
processors:
  batch:
    timeout: 10s
    send_batch_size: 1024

  memory_limiter:
    check_interval: 1s
    limit_mib: 1024

  resource:
    attributes:
      - action: insert
        key: environment
        value: production

exporters:
  influxdb:
    endpoint: http://influxdb2:8086
    org: docs
    bucket: monitordb
    token: 6pvbLls7ey_gDhTv-9bpLdcoVFw6-Ot1s9kCLXmVwa54B9oSY6GMzhdMA47R8oXjnE7gWIHD7Kd3MLo04Oqykg==
    metrics_schema: telegraf-prometheus-v1
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 5000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

service:
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [memory_limiter, batch, resource]
      exporters: [influxdb]

  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
