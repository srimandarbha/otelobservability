receivers:
  # Receive metrics from the Exporter
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"

  # Collect internal telemetry data from the Collector itself
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector-internal'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']  # Internal telemetry endpoint

extensions:
  health_check:
    endpoint: "0.0.0.0:13133" 
    path: "/health/status" 
    check_collector_pipeline: 
      enabled: true 
      interval: "5m" 
      exporter_failure_threshold: 5 
  zpages:
    endpoint: "0.0.0.0:55679"

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_mib: 1024

exporters:
  influxdb:
    endpoint: http://influxdb2:8086
    org: docs
    bucket: monitordb
    token: 1clX8gJMWU9hlVZy4QcKFRAxN9_Y-W_X1HquXdMFRtKHPAKq3pHolHKwOuMv0qYNg8V5o36QeG6zMInsWfMZoA==
    metrics_schema: telegraf-prometheus-v1
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 5000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

service:
  extensions: [zpages, health_check]
  pipelines:
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch]
      exporters: [influxdb]

