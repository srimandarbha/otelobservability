receivers:
  # Collect host metrics from the local system
  hostmetrics:
    collection_interval: 30s
    scrapers:
      system:

processors:
  batch:
    timeout: 10s
    send_batch_size: 512
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  resource:
    attributes:
      - action: insert
        key: metrics_type
        value: "default"

exporters:
  otlphttp:
    endpoint: http://otel-collector:4318
  #kafka:
  #  brokers: ["kafka:9092"] # Replace with your Kafka brokers
  #  topic: "test-topic"    # Replace with the desired Kafka topic
  #  encoding: otlp_json        # Use the appropriate encoding (e.g., otlp_proto, otlp_json, etc.)
  # Default InfluxDB Exporter
  #influxdb:
  #  endpoint: http://localhost:8086
  #  org: docs
  #  bucket: otel-exporter
  #  token: 1clX8gJMWU9hlVZy4QcKFRAxN9_Y-W_X1HquXdMFRtKHPAKq3pHolHKwOuMv0qYNg8V5o36QeG6zMInsWfMZoA==
  #  metrics_schema: telegraf-prometheus-v1
  #  sending_queue:
  #    enabled: true
  #    num_consumers: 10
  #    queue_size: 5000
  #  retry_on_failure:
  #    enabled: true
  #    initial_interval: 5s
  #    max_interval: 30s
  #    max_elapsed_time: 300s


service:
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [memory_limiter, batch]
      exporters: [otlphttp]
  telemetry:
    metrics:
      level: basic
      readers:
        - periodic:
            exporter:
              otlp:
                protocol: grpc/protobuf
                endpoint: http://otel-collector:4317
